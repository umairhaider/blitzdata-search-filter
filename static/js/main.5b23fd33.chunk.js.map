{"version":3,"sources":["components/common/EmptyView/index.jsx","constants/index.js","components/common/CheckboxProton/index.jsx","components/common/ToggleProton/index.jsx","components/common/NumberSlider/index.jsx","components/common/DatePickerProton/index.jsx","components/Home/FilterPanel/index.jsx","components/Home/List/ListItem/index.jsx","components/Home/List/index.jsx","components/Home/SearchBar/index.jsx","components/api-calls/index.jsx","pages/Home/index.jsx","App.jsx","index.js"],"names":["EmptyView","className","src","alt","ratingList","id","value","label","makeStyles","root","color","checked","wrap","width","display","flexDirection","justifyContent","alignItems","marginLeft","fontSize","fontFamily","useStyles","toggle","border","borderRadius","background","ToggleProton","options","selectToggle","classes","ToggleButtonGroup","exclusive","onChange","map","ToggleButton","thumb","rail","track","NumberSlider","changeNumber","minNumber","maxNumber","attributeName","Slider","valueLabelDisplay","min","max","DatePickerProton","changeDated","selectedDate","utils","DateFnsUtils","disableToolbar","variant","format","margin","KeyboardButtonProps","FilterPanel","selectEnum","changeChecked","attributeList","changedDate","selectedEnums","selectedToggles","selectedNumbers","selectedDates","attribute","type","Fragment","date","ListItem","item","title","images","excerpt","editiondate","List","blitzDataList","items","SearchBar","changeInput","placeholder","getBlitzData","conditions","a","axios","get","response","data","Home","useState","selectedCheckbox","setSelectedCheckbox","selectedToggle","setSelectedToggle","default","selectedNumber","setSelectedNumber","setSelectedDate","setEnum","blitzData","setBlitzData","setBlitzDataList","setResultsFound","searchInput","setSearchInput","setAttributeList","createConditions","Object","keys","console","log","Array","isArray","minValue","maxValue","push","join","useEffect","returnedData","entries","model","attributes","updatedList","updatedBlitzDataList","JSON","parse","stringify","filter","parseInt","values","Date","toDateString","toLowerCase","undefined","search","trim","length","applyFilters","name","e","target","prev","newState","prevState","formattedDate","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5b23fd33.chunk.js","sourcesContent":["import React from 'react';\r\nimport './styles.css';\r\n\r\nconst EmptyView = () => (\r\n  <div className='emptyView-wrap'>\r\n    <img src='/images/gif/empty.gif' alt='' />\r\n  </div>\r\n);\r\n\r\nexport default EmptyView;\r\n","export const categoryList = [\r\n  {\r\n    id: 1,\r\n    value: 'place',\r\n    label: '🚩 Places',\r\n  },\r\n  {\r\n    id: 2,\r\n    value: 'dish',\r\n    label: '🍕 Dishes',\r\n  },\r\n];\r\n\r\nexport const ratingList = [\r\n  {\r\n    id: 1,\r\n    value: '1',\r\n    label: '1🌟',\r\n  },\r\n  {\r\n    id: 2,\r\n    value: '2',\r\n    label: '2🌟',\r\n  },\r\n  {\r\n    id: 3,\r\n    value: '3',\r\n    label: '3🌟',\r\n  },\r\n  {\r\n    id: 4,\r\n    value: '4',\r\n    label: '4🌟',\r\n  },\r\n  {\r\n    id: 5,\r\n    value: '5',\r\n    label: '5🌟',\r\n  },\r\n];\r\n\r\nexport const dataList = [\r\n  {\r\n    id: 1,\r\n    title: 'lounge resort',\r\n    serviceTime: '45-60min',\r\n    deliveryFee: 3.44,\r\n    category: 'place',\r\n    cuisine: 'american',\r\n    rating: 5,\r\n    price: 2500,\r\n    coverSrc: '/images/places/ameri.jpg',\r\n  },\r\n  {\r\n    id: 2,\r\n    title: 'door urban',\r\n    serviceTime: '15-20min',\r\n    deliveryFee: 4.94,\r\n    category: 'place',\r\n    cuisine: 'italian',\r\n    rating: 4,\r\n    price: 1000,\r\n    coverSrc: '/images/places/italian.webp',\r\n  },\r\n  {\r\n    id: 3,\r\n    title: 'chow',\r\n    serviceTime: '30-22min',\r\n    deliveryFee: 4.94,\r\n    category: 'place',\r\n    cuisine: 'chinese',\r\n    rating: 3,\r\n    price: 2000,\r\n    coverSrc: '/images/places/china.jpg',\r\n  },\r\n  {\r\n    id: 4,\r\n    title: 'wharf seafood',\r\n    serviceTime: '10-18min',\r\n    deliveryFee: 2.14,\r\n    category: 'place',\r\n    cuisine: 'american',\r\n    rating: 1,\r\n    price: 1800,\r\n    coverSrc: '/images/places/sea.jpg',\r\n  },\r\n  {\r\n    id: 5,\r\n    title: 'Tossin',\r\n    serviceTime: '25-30min',\r\n    deliveryFee: 6.79,\r\n    category: 'place',\r\n    cuisine: 'italian',\r\n    rating: 5,\r\n    price: 2000,\r\n    coverSrc: '/images/places/italiian.jpg',\r\n  },\r\n  {\r\n    id: 6,\r\n    title: 'stories noodles',\r\n    serviceTime: '5-15min',\r\n    deliveryFee: 2.87,\r\n    category: 'place',\r\n    cuisine: 'chinese',\r\n    rating: 5,\r\n    price: 3500,\r\n    coverSrc: '/images/places/fookyew2.jpg',\r\n  },\r\n  {\r\n    id: 7,\r\n    title: 'Nacho cheeseburger',\r\n    serviceTime: '50-65min',\r\n    deliveryFee: 8.5,\r\n    category: 'dish',\r\n    cuisine: 'american',\r\n    rating: 2,\r\n    price: 2200,\r\n    coverSrc: '/images/dishes/nacho-burger.jpg',\r\n  },\r\n  {\r\n    id: 8,\r\n    title: 'Mushroom Risotto',\r\n    serviceTime: '10-15min',\r\n    deliveryFee: 1.8,\r\n    category: 'dish',\r\n    cuisine: 'italian',\r\n    rating: 1,\r\n    price: 1900,\r\n    coverSrc: '/images/dishes/Mushroom-Risotto-Recipe-1-1200.jpg',\r\n  },\r\n  {\r\n    id: 9,\r\n    title: 'Shitake Fried Rice',\r\n    serviceTime: '12-18min',\r\n    deliveryFee: 3.33,\r\n    category: 'dish',\r\n    cuisine: 'chinese',\r\n    rating: 4,\r\n    price: 2750,\r\n    coverSrc: '/images/dishes/shiitake-salmon-fried-rice-0218-103230720.jpg',\r\n  },\r\n  {\r\n    id: 10,\r\n    title: 'Pesto chicken stew',\r\n    serviceTime: '30-38min',\r\n    deliveryFee: 1.9,\r\n    category: 'dish',\r\n    cuisine: 'american',\r\n    rating: 2,\r\n    price: 4350,\r\n    coverSrc: '/images/dishes/pesto-chicken.jpg',\r\n  },\r\n  {\r\n    id: 11,\r\n    title: 'Bruschetta',\r\n    serviceTime: '16-20min',\r\n    deliveryFee: 4.1,\r\n    category: 'dish',\r\n    cuisine: 'italian',\r\n    rating: 3,\r\n    price: 3300,\r\n    coverSrc: '/images/dishes/as-tomato-bruschetta-articleLarge.jpg',\r\n  },\r\n  {\r\n    id: 12,\r\n    title: 'Dim Sums',\r\n    serviceTime: '24-30min',\r\n    deliveryFee: 1.5,\r\n    category: 'dish',\r\n    cuisine: 'chinese',\r\n    rating: 2,\r\n    price: 4100,\r\n    coverSrc: '/images/dishes/dimsums.jpg',\r\n  },\r\n];\r\n","import React from 'react';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    '&$checked': {\r\n      color: '#000',\r\n    },\r\n  },\r\n  checked: {},\r\n  wrap: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row-reverse',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginLeft: 0,\r\n  },\r\n  label: {\r\n    fontSize: '.8rem',\r\n    fontFamily: `'Raleway', sans-serif`,\r\n  },\r\n});\r\n\r\nconst CheckboxProton = ({ changeChecked, cuisine }) => {\r\n  const classes = useStyles();\r\n  const { checked, label, id } = cuisine;\r\n  return (\r\n    <div>\r\n      <FormControlLabel\r\n        classes={{\r\n          label: classes.label,\r\n          root: classes.wrap,\r\n        }}\r\n        control={\r\n          <Checkbox\r\n            classes={{\r\n              checked: classes.checked,\r\n              root: classes.root,\r\n            }}\r\n            size='small'\r\n            checked={checked}\r\n            onChange={() => changeChecked(id)}\r\n            inputProps={{ 'aria-label': 'checkbox with small size' }}\r\n          />\r\n        }\r\n        label={label}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckboxProton;\r\n","import React from 'react';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n    justifyContent: 'space-between',\r\n  },\r\n  toggle: {\r\n    fontFamily: `'Raleway', sans-serif`,\r\n    fontSize: '.8rem',\r\n    border: '1px solid rgba(0, 0, 0, 0.12)',\r\n    borderRadius: '10px',\r\n    '&.MuiToggleButtonGroup-groupedHorizontal:not(:last-child)': {\r\n      borderRadius: '10px',\r\n    },\r\n    '&.MuiToggleButtonGroup-groupedHorizontal:not(:first-child)': {\r\n      borderRadius: '10px',\r\n      border: '1px solid rgba(0, 0, 0, 0.12)',\r\n    },\r\n    '&.Mui-selected': {\r\n      borderRadius: '10px',\r\n      background: '#000',\r\n      color: '#fff',\r\n    },\r\n    '&.MuiToggleButton-root': {\r\n      '&:hover': {\r\n        background: '#000',\r\n        color: '#fff',\r\n      },\r\n    },\r\n  },\r\n});\r\n\r\nconst ToggleProton = ({ options, value, selectToggle }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <ToggleButtonGroup\r\n      value={value}\r\n      exclusive\r\n      onChange={selectToggle}\r\n      className={classes.root}\r\n    >\r\n      {options.map(({ label, id, value }) => (\r\n        <ToggleButton className={classes.toggle} key={id} value={value}>\r\n          {label}\r\n        </ToggleButton>\r\n      ))}\r\n    </ToggleButtonGroup>\r\n  );\r\n};\r\n\r\nexport default ToggleProton;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Slider from '@material-ui/core/Slider';\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  thumb: {\r\n    color: '#000',\r\n  },\r\n  rail: {\r\n    color: `rgba(0, 0, 0, 0.26)`,\r\n  },\r\n  track: {\r\n    color: '#000',\r\n  },\r\n});\r\n\r\nconst NumberSlider = ({ value, changeNumber, minNumber, maxNumber, attributeName }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Slider\r\n        value={value}\r\n        onChange={changeNumber}\r\n        valueLabelDisplay='on'\r\n        min={minNumber}\r\n        max={maxNumber}\r\n        classes={{\r\n          thumb: classes.thumb,\r\n          rail: classes.rail,\r\n          track: classes.track,\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NumberSlider;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker\r\n} from \"@material-ui/pickers\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    '&$checked': {\r\n      color: '#000',\r\n    },\r\n  },\r\n  checked: {},\r\n  wrap: {\r\n    width: '100%',\r\n    display: 'flex',\r\n    flexDirection: 'row-reverse',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    marginLeft: 0,\r\n  },\r\n  label: {\r\n    fontSize: '.8rem',\r\n    fontFamily: `'Raleway', sans-serif`,\r\n  },\r\n});\r\n\r\nconst DatePickerProton = ({ changeDated, selectedDate }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n      <KeyboardDatePicker\r\n        disableToolbar\r\n        variant=\"inline\"\r\n        format=\"MM/dd/yyyy\"\r\n        margin=\"normal\"\r\n        id=\"date-picker-inline\"\r\n        label=\"Select date\"\r\n        value={selectedDate}\r\n        onChange={changeDated}\r\n        KeyboardButtonProps={{\r\n          \"aria-label\": \"change date\"\r\n        }}\r\n      />\r\n    </MuiPickersUtilsProvider>\r\n  );\r\n};\r\n\r\nexport default DatePickerProton;\r\n","import React from 'react';\r\nimport { categoryList, ratingList } from '../../../constants';\r\nimport CheckboxProton from '../../common/CheckboxProton';\r\nimport ToggleProton from '../../common/ToggleProton';\r\nimport NumberSlider from '../../common/NumberSlider';\r\nimport './styles.css';\r\nimport DatePickerProton from '../../common/DatePickerProton';\r\n\r\n\r\nconst FilterPanel = ({\r\n  selectEnum,\r\n  selectToggle,\r\n  changeChecked,\r\n  changeNumber,\r\n  attributeList,\r\n  changedDate,\r\n  selectedEnums = {},\r\n  selectedToggles = {},\r\n  selectedNumbers = {},\r\n  selectedDates = {},\r\n}) => (\r\n  <div>\r\n    {attributeList.map(({ attribute, type, label }) => {\r\n      if (type === 'int') {\r\n        return (\r\n          <React.Fragment key={attribute}>\r\n            <p className='label-range'>{label}</p>\r\n            <NumberSlider\r\n              value={selectedNumbers[attribute]}\r\n              changeNumber={(value) => changeNumber(attribute, value)}\r\n              minNumber={100}\r\n              maxNumber={5000}\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      }\r\n\r\n      else if (type === 'date') {\r\n        return (\r\n          <React.Fragment key={attribute}>\r\n            <p className='label-range'>{label}</p>\r\n            <DatePickerProton \r\n              selectedDate={selectedDates[attribute]} // Use attribute-specific state\r\n              changeDated={(date) => changedDate(attribute, date)} // Pass attribute along with date to the handler\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      }\r\n\r\n      else if (type === 'enum') {\r\n        return (\r\n          <React.Fragment key={attribute}>\r\n            <p className='label'>{label}</p>\r\n            <ToggleProton\r\n              options={ratingList}\r\n              value={selectedToggles[attribute]} // Use attribute-specific state\r\n              selectToggle={(value) => selectToggle(attribute, value)} // Pass attribute along with value to the handler\r\n            />\r\n          </React.Fragment>\r\n        );\r\n      }\r\n\r\n      return null;\r\n    })}\r\n  </div>\r\n);\r\n\r\nexport default FilterPanel;\r\n","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst ListItem = ({\r\n  item: { title, images, excerpt, editiondate, },\r\n}) => (\r\n  <div className='listItem-wrap'>\r\n    <img src={images != null ? images[0]['base'] + images[0]['180x180_wp'] : \"\"} alt='' />\r\n    <header>\r\n      <h4>{title}</h4>\r\n      <span>{editiondate}</span>\r\n    </header>\r\n    <footer>\r\n      <p>\r\n        <span>{excerpt}</span>\r\n      </p>\r\n    </footer>\r\n  </div>\r\n);\r\n\r\nexport default ListItem;\r\n","import React from 'react';\r\nimport ListItem from './ListItem';\r\nimport './styles.css';\r\n\r\nconst List = ({ blitzDataList = {items: []} }) => (\r\n  <div className='list-wrap'>\r\n    {blitzDataList?.items?.map((item) => (\r\n      <ListItem key={item['@sort']} item={item} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport './styles.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst SearchBar = ({ value, changeInput}) => (\r\n  <div className='searchBar-wrap'>\r\n    <SearchIcon className='searchBar-icon' />\r\n    <input\r\n      type='text'\r\n      placeholder='Search Bar'\r\n      value={value}\r\n      onChange={changeInput}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default SearchBar;\r\n","import axios from 'axios';\r\n\r\nexport const getBlitzData = async (conditions) => {\r\n    if (conditions === \"\") {\r\n        const response = await axios.get(`https://seeblick.localpoint.ch/api/list/cms_articles.json`);\r\n        return response.data;\r\n    }\r\n    const response = await axios.get(`https://seeblick.localpoint.ch/api/list/cms_articles.json?conditions=[${conditions}]`);\r\n    return response.data;\r\n}","import React, { useEffect, useState } from 'react';\r\nimport EmptyView from '../../components/common/EmptyView';\r\nimport FilterPanel from '../../components/Home/FilterPanel';\r\nimport List from '../../components/Home/List';\r\nimport SearchBar from '../../components/Home/SearchBar';\r\nimport {getBlitzData} from '../../components/api-calls';\r\nimport './styles.css';\r\nimport { format } from 'date-fns';\r\n\r\nconst Home = () => {\r\n  const [selectedCheckbox, setSelectedCheckbox] = useState({});\r\n  const [selectedToggle, setSelectedToggle] = useState({});\r\n  const [selectedNumber, setSelectedNumber] = useState({default: [1000, 5000]});\r\n  const [selectedDate, setSelectedDate] = useState({});\r\n\r\n  const [selectEnum, setEnum] = useState([]);\r\n\r\n  const [blitzData, setBlitzData] = useState([{}]);\r\n  const [blitzDataList, setBlitzDataList] = useState(blitzData);\r\n  const [resultsFound, setResultsFound] = useState(true);\r\n  const [searchInput, setSearchInput] = useState('');\r\n  const [attributeList, setAttributeList] = useState({});\r\n\r\n  const handleSelectCheckbox = (attribute, value) => {\r\n    setSelectedCheckbox((prev) => ({\r\n      ...prev,\r\n      [attribute]: value,\r\n    }));\r\n  };\r\n\r\n  const handleChangeChecked = (attribute, id) => {\r\n\r\n    const newState = { ...selectEnum };\r\n  \r\n    // Find the specific checkbox list based on attribute\r\n    const attributeList = newState[attribute];\r\n  \r\n    // Update the specific checkbox in the list\r\n    const updatedList = attributeList.map((item) =>\r\n      item.id === id ? { ...item, checked: !item.checked } : item\r\n    );\r\n  \r\n    // Update the state\r\n    newState[attribute] = updatedList;\r\n  \r\n    // Set the new state\r\n    setEnum(newState);\r\n  };\r\n  \r\n\r\n  const handleSelectToggle = (attribute, value) => {\r\n    setSelectedToggle((prev) => ({\r\n      ...prev,\r\n      [attribute]: value,\r\n    }));\r\n  };\r\n\r\n  const handleChangeNumber = (attribute, value) => {\r\n    setSelectedNumber(prevState => ({\r\n      ...prevState,\r\n      [attribute]: value,\r\n    }));\r\n  };\r\n  \r\n  \r\n\r\n  const handleDateChange = (attribute, date) => {\r\n    const formattedDate = format(date, 'yyyy-MM-dd HH:mm:ss');\r\n    setSelectedDate((prev) => ({\r\n      ...prev,\r\n      [attribute]: formattedDate,\r\n    }));\r\n  };\r\n  \r\n\r\n  const createConditions = () => {\r\n    let conditions = [];\r\n  \r\n    // Handle selectedCheckbox\r\n    /* for (const attribute in selectedCheckbox) {\r\n      const value = selectedCheckbox[attribute];\r\n      if (value) {\r\n        conditions.push(`[\"${attribute}\", \"=\", \"${value}\"]`);\r\n      }\r\n    } */\r\n  \r\n    // Handle selectedToggle\r\n    /* for (const attribute in selectedToggle) {\r\n      const value = selectedToggle[attribute];\r\n      console.log('SelectedToggle',value);\r\n      if (value) {\r\n        conditions.push(`[\"${attribute}\", \"=\", \"${value}\"]`);\r\n      }\r\n    } */\r\n  \r\n    // Iterate over all selectedNumber states\r\n    for (const attribute of Object.keys(selectedNumber)) {\r\n      if (attribute !== 'default') {\r\n        const value = selectedNumber[attribute];\r\n        console.log('First', attribute);\r\n\r\n        if (Array.isArray(value)) {\r\n          const [minValue, maxValue] = value;\r\n          console.log('Second', attribute);\r\n          conditions.push(`[\"${attribute}\", \">\", \"${minValue}\"]`);\r\n          conditions.push(`[\"${attribute}\", \"<\", \"${maxValue}\"]`);\r\n        }\r\n      }\r\n    }\r\n\r\n  \r\n    // Handle selectedDate\r\n    for (const attribute in selectedDate) {\r\n      const value = selectedDate[attribute];\r\n      if (value) {\r\n        conditions.push(`[\"${attribute}\", \">\", \"${value}\"]`);\r\n      }\r\n    }\r\n  \r\n    return conditions.join(',');\r\n  };  \r\n\r\n  const applyFilters = () => {\r\n    let updatedList = [];\r\n    let updatedBlitzDataList = JSON.parse(JSON.stringify(blitzData));\r\n  \r\n    // Iterate over all selectedToggle states\r\n    for (const attribute in selectedToggle) {\r\n      const value = selectedToggle[attribute];\r\n      if (value) {\r\n        updatedList = updatedList.filter(\r\n          (item) => parseInt(item[attribute]) === parseInt(value)\r\n        );\r\n      }\r\n    }\r\n  \r\n    // Iterate over all selectedCheckbox states\r\n    for (const attribute in selectedCheckbox) {\r\n      const value = selectedCheckbox[attribute];\r\n      if (value) {\r\n        updatedList = updatedList.filter(\r\n          (item) => item[attribute] === value\r\n        );\r\n      }\r\n    }\r\n  \r\n    // Iterate over all selectedNumber states\r\n    for (const [attribute, values] of Object.entries(selectedNumber)) {\r\n      if (Array.isArray(values)) {\r\n        const [minValue, maxValue] = values;\r\n        updatedList = updatedList.filter(\r\n          (item) => item[attribute] >= minValue && item[attribute] <= maxValue\r\n        );\r\n      }\r\n    }\r\n  \r\n    // Iterate over all selectedDate states\r\n    for (const attribute in selectedDate) {\r\n      const value = selectedDate[attribute];\r\n      if (value) {\r\n        updatedList = updatedList.filter(\r\n          (item) => new Date(item[attribute]).toDateString() === new Date(value).toDateString()\r\n        );\r\n      }\r\n    }\r\n  \r\n    // Enum Checkbox Filter\r\n    const enumsChecked = selectEnum\r\n      .filter((item) => item.checked)\r\n      .map((item) => item.label.toLowerCase());\r\n  \r\n    // Search Filter\r\n    if (searchInput) {\r\n      if(updatedBlitzDataList.items !== false\r\n        && updatedBlitzDataList.items !== undefined\r\n        && updatedBlitzDataList.items !== null) {\r\n          updatedBlitzDataList.items = updatedBlitzDataList.items.filter(\r\n            (item) =>\r\n              item.title.toLowerCase().search(searchInput.toLowerCase().trim()) !==\r\n              -1\r\n          );\r\n        }\r\n      \r\n    }\r\n  \r\n    setBlitzDataList(updatedBlitzDataList);\r\n  \r\n    !updatedBlitzDataList?.items?.length ? setResultsFound(false) : setResultsFound(true);\r\n  };  \r\n\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      const conditions = createConditions();\r\n      const returnedData = await getBlitzData(conditions);\r\n      setBlitzData(returnedData);\r\n      setBlitzDataList(returnedData);\r\n      const attributeList = Object.entries(returnedData.model.attributes).map(([attribute, value]) => ({\r\n        attribute,\r\n        type: value.type,\r\n        label: value.label\r\n      }));\r\n      setAttributeList(attributeList);\r\n    })()\r\n  },  [selectedCheckbox, selectedToggle, selectedNumber, selectedDate]);\r\n\r\n  useEffect(() => {\r\n    applyFilters();\r\n  }, [selectedToggle, selectedCheckbox, searchInput, selectedNumber]);\r\n\r\n  return (\r\n    <div className='home'>\r\n      <div>\r\n        <h1>{blitzDataList?.model?.name != null ? blitzDataList.model.name : \"Loading...\"}</h1>\r\n      </div>\r\n      {/* Search Bar */}\r\n      <SearchBar\r\n        value={searchInput}\r\n        changeInput={(e) => setSearchInput(e.target.value)}\r\n      />\r\n      <div className='home_panelList-wrap'>\r\n        {/* Filter Panel */}\r\n        <div className='home_panel-wrap'>\r\n          {attributeList.length > 0 ?\r\n          <FilterPanel\r\n          selectedEnums={selectedCheckbox}\r\n          selectEnum={handleSelectCheckbox}\r\n          selectedToggles={selectedToggle}\r\n          selectedNumbers={selectedNumber}\r\n          selectToggle={handleSelectToggle}\r\n          changeChecked={handleChangeChecked}\r\n          changeNumber={handleChangeNumber}\r\n          attributeList={attributeList}\r\n          selectedDates={selectedDate}\r\n          changedDate={handleDateChange}\r\n        /> : <span>Loading...</span>\r\n          }\r\n        </div>\r\n        {/* List & Empty View */}\r\n        <div className='home_list-wrap'>\r\n          {blitzDataList?.items != null && blitzDataList?.items !=false ? <List blitzDataList={blitzDataList}/> : <EmptyView />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport Home from './pages/Home';\r\nimport './App.css';\r\n\r\nconst App = () => <Home />;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}